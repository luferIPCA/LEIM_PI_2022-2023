<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_header_8h" kind="file" language="C++">
    <compoundname>Header.h</compoundname>
    <includedby refid="_aula_8c" local="yes">D:/Temp/PI/AulasPI/Aula 6 -Arrays/Aula.c</includedby>
    <includedby refid="_funcoes_8c" local="yes">D:/Temp/PI/AulasPI/Aula 6 -Arrays/Funcoes.c</includedby>
    <includedby refid="_strings_8c" local="yes">D:/Temp/PI/AulasPI/Aula 6 -Arrays/Strings.c</includedby>
    <invincdepgraph>
      <node id="2">
        <label>D:/Temp/PI/AulasPI/Aula 6 -Arrays/Aula.c</label>
        <link refid="_aula_8c"/>
      </node>
      <node id="3">
        <label>D:/Temp/PI/AulasPI/Aula 6 -Arrays/Funcoes.c</label>
        <link refid="_funcoes_8c"/>
      </node>
      <node id="1">
        <label>D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h</label>
        <link refid="_header_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>D:/Temp/PI/AulasPI/Aula 6 -Arrays/Strings.c</label>
        <link refid="_strings_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structpessoa" prot="public">pessoa</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_header_8h_1ac8d0b8208abd9d034f8773dce910b3f5" prot="public" static="no">
        <name>MAXNOME</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="10" column="9" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_header_8h_1a392fb874e547e582e9c66a08a1f23326" prot="public" static="no">
        <name>MAX</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="11" column="9" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_header_8h_1a7c6368b321bd9acd0149b030bb8275ed" prot="public" static="no" strong="no">
        <type></type>
        <name>boolean</name>
        <enumvalue id="_header_8h_1a7c6368b321bd9acd0149b030bb8275edae9de385ef6fe9bf3360d1038396b884c" prot="public">
          <name>false</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_header_8h_1a7c6368b321bd9acd0149b030bb8275eda08f175a5505a10b9ed657defeb050e4b" prot="public">
          <name>true</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="16" column="1" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" bodystart="16" bodyend="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_header_8h_1ac082d5cee36c7cfeb708ee6b04e8e903" prot="public" static="no">
        <type>struct <ref refid="structpessoa" kindref="compound">pessoa</ref></type>
        <definition>typedef struct pessoa pessoa</definition>
        <argsstring></argsstring>
        <name>pessoa</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="23" column="21" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_header_8h_1a0f5448f6cd703cab44b41e2b9b572790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mostraPessoas</definition>
        <argsstring>(pessoa p[], int size)</argsstring>
        <name>mostraPessoas</name>
        <param>
          <type><ref refid="structpessoa" kindref="compound">pessoa</ref></type>
          <declname>p</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apresenta todas as pessoas que constam um array!</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="25" column="6" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Funcoes.c" bodystart="118" bodyend="123" declfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_header_8h_1a95715297ae648aad012dc21daa04d917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpessoa" kindref="compound">pessoa</ref></type>
        <definition>pessoa existePessoa</definition>
        <argsstring>(pessoa p[], int size, char nome[])</argsstring>
        <name>existePessoa</name>
        <param>
          <type><ref refid="structpessoa" kindref="compound">pessoa</ref></type>
          <declname>p</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>char</type>
          <declname>nome</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Procura a pessoa com determinado nome!</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nome</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="26" column="8" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Funcoes.c" bodystart="133" bodyend="142" declfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" declline="26" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="_header_8h_1aa5ac60bb921b4c54a9039d846c8a399f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int * getArrayPares</definition>
        <argsstring>(const int v[], int size)</argsstring>
        <name>getArrayPares</name>
        <param>
          <type>const int</type>
          <declname>v</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Devolve arrays de valores pares!</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="32" column="5" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Funcoes.c" bodystart="56" bodyend="68" declfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" declline="32" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_header_8h_1ad6bd7cb55b5a2bca3c93279cae2e8d16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int * getArrayParesII</definition>
        <argsstring>(int *v, int size)</argsstring>
        <name>getArrayParesII</name>
        <param>
          <type>int *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="33" column="5" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Funcoes.c" bodystart="70" bodyend="82" declfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" declline="33" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_header_8h_1a93879f75c7a113e23a33561fa0ae0df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iniciaArray</definition>
        <argsstring>(int v[], const int size)</argsstring>
        <name>iniciaArray</name>
        <param>
          <type>int</type>
          <declname>v</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Coloca valor inicial em todas as posições de um array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="34" column="6" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Funcoes.c" bodystart="104" bodyend="108" declfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" declline="34" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_header_8h_1acba33774b86ce13b162494309aa91f0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mostraArray</definition>
        <argsstring>(const int v[], const int size)</argsstring>
        <name>mostraArray</name>
        <param>
          <type>const int</type>
          <declname>v</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apresenta conteúdo do array no ecrã</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="35" column="6" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Funcoes.c" bodystart="90" bodyend="96" declfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" declline="35" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_header_8h_1ac46b192e720576aaeec8864ed0ad507b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * allChar</definition>
        <argsstring>(const char v1[], char ch)</argsstring>
        <name>allChar</name>
        <param>
          <type>const char</type>
          <declname>v1</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Devolve todos os caracteres existentes num array de caracteres.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v1</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="37" column="6" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Strings.c" bodystart="76" bodyend="87" declfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" declline="37" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_header_8h_1a8396d60bd2607c3f3e7b774ea21a8bc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_header_8h_1a7c6368b321bd9acd0149b030bb8275ed" kindref="member">boolean</ref></type>
        <definition>boolean existeChar</definition>
        <argsstring>(const char v1[], char ch)</argsstring>
        <name>existeChar</name>
        <param>
          <type>const char</type>
          <declname>v1</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="38" column="9" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Strings.c" bodystart="43" bodyend="50" declfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" declline="38" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="_header_8h_1a4a4b7eadce47aaaf72dd2b9f94eae19a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void inicializaArray</definition>
        <argsstring>(char n[], int size, char ch)</argsstring>
        <name>inicializaArray</name>
        <param>
          <type>char</type>
          <declname>n</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inicializa um array com determinado caracter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="40" column="6" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Strings.c" bodystart="19" bodyend="23" declfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" declline="40" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_header_8h_1a4bab2f2b1478e6d87cd3f4b5cb1d3d1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_header_8h_1a7c6368b321bd9acd0149b030bb8275ed" kindref="member">boolean</ref></type>
        <definition>boolean existeValor</definition>
        <argsstring>(int v[], int size, int valor)</argsstring>
        <name>existeValor</name>
        <param>
          <type>int</type>
          <declname>v</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>valor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="41" column="9" declfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" declline="41" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="_header_8h_1a95a0363c9608b85f0a4c2c5088d5aab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ondeEstaChar</definition>
        <argsstring>(char v[], int size, char ch)</argsstring>
        <name>ondeEstaChar</name>
        <param>
          <type>char</type>
          <declname>v</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indica a posição onde se encontra determinado caracter num array de caracteres.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="42" column="5" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Strings.c" bodystart="34" bodyend="41" declfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" declline="42" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_header_8h_1a6cd9ca8e3028cc2b956e6419a31c2774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int somaArray</definition>
        <argsstring>(int valores[], int size)</argsstring>
        <name>somaArray</name>
        <param>
          <type>int</type>
          <declname>valores</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" line="43" column="5" bodyfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Funcoes.c" bodystart="146" bodyend="153" declfile="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h" declline="43" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Assinaturas de funções e Tipos de Dados Structs. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>lufer </para>
</simplesect>
<simplesect kind="date"><para>2022 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="_header_8h_1ac8d0b8208abd9d034f8773dce910b3f5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAXNOME<sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="_header_8h_1a392fb874e547e582e9c66a08a1f23326" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable:<sp/>4996)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>AssinaturasStructs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="_header_8h_1a7c6368b321bd9acd0149b030bb8275ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">}<ref refid="_header_8h_1a7c6368b321bd9acd0149b030bb8275ed" kindref="member">boolean</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="structpessoa" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpessoa" kindref="compound">pessoa</ref><sp/>{</highlight></codeline>
<codeline lineno="19" refid="structpessoa_1a0e171e163608cff29f04f3591744bb3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structpessoa_1a0e171e163608cff29f04f3591744bb3e" kindref="member">nome</ref>[<ref refid="_header_8h_1ac8d0b8208abd9d034f8773dce910b3f5" kindref="member">MAXNOME</ref>];</highlight></codeline>
<codeline lineno="20" refid="structpessoa_1ad5ea2e19b7deb827930edce70e13e3b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpessoa_1ad5ea2e19b7deb827930edce70e13e3b8" kindref="member">idade</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="_header_8h_1ac082d5cee36c7cfeb708ee6b04e8e903" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpessoa" kindref="compound">pessoa</ref><sp/><ref refid="structpessoa" kindref="compound">pessoa</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_header_8h_1a0f5448f6cd703cab44b41e2b9b572790" kindref="member">mostraPessoas</ref>(<ref refid="structpessoa" kindref="compound">pessoa</ref><sp/>p[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="structpessoa" kindref="compound">pessoa</ref><sp/><ref refid="_header_8h_1a95715297ae648aad012dc21daa04d917" kindref="member">existePessoa</ref>(<ref refid="structpessoa" kindref="compound">pessoa</ref><sp/>p[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structpessoa_1a0e171e163608cff29f04f3591744bb3e" kindref="member">nome</ref>[]);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>AssinaturasArrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="_header_8h_1aa5ac60bb921b4c54a9039d846c8a399f" kindref="member">getArrayPares</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="_header_8h_1ad6bd7cb55b5a2bca3c93279cae2e8d16" kindref="member">getArrayParesII</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_header_8h_1a93879f75c7a113e23a33561fa0ae0df5" kindref="member">iniciaArray</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_header_8h_1acba33774b86ce13b162494309aa91f0c" kindref="member">mostraArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_header_8h_1ac46b192e720576aaeec8864ed0ad507b" kindref="member">allChar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v1[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="_header_8h_1a8396d60bd2607c3f3e7b774ea21a8bc1" kindref="member">existeChar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v1[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_header_8h_1a4a4b7eadce47aaaf72dd2b9f94eae19a" kindref="member">inicializaArray</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>n[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch);</highlight></codeline>
<codeline lineno="41" refid="_header_8h_1a4bab2f2b1478e6d87cd3f4b5cb1d3d1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="_header_8h_1a4bab2f2b1478e6d87cd3f4b5cb1d3d1b" kindref="member">existeValor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valor);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_header_8h_1a95a0363c9608b85f0a4c2c5088d5aab5" kindref="member">ondeEstaChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_header_8h_1a6cd9ca8e3028cc2b956e6419a31c2774" kindref="member">somaArray</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valores[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight></codeline>
    </programlisting>
    <location file="D:/Temp/PI/AulasPI/Aula 6 -Arrays/Header.h"/>
  </compounddef>
</doxygen>
